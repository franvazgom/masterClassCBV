******************************************************************************
Instalación de python
******************************************************************************
https://www.python.org/downloads/
    * Se recomienda "agregar al path" (da la opción al momento la instalación)
    * Verificar la instalación
        + Abrir una terminal
        + Ejecutar  python --version
            - Devuelve 3.11.3   (ejemplo)

******************************************************************************
Instalación de Visual Studio Code
******************************************************************************
https://code.visualstudio.com/download
    * Una vez instalado, se pueden instalar extensiones 
      para visualizar de mejor manera el código. 

******************************************************************************
Instalación de Git  (opcional / recomendble)
******************************************************************************
https://git-scm.com/downloads
* Verificar la instalación
        + Abrir una terminal
        + Ejecutar  git --version

******************************************************************************
Clonar repositorio 
******************************************************************************
Desde una terminal, ejecutar: 
git clone https://github.com/franvazgom/masterClassCBV.git

******************************************************************************
Creación del entorno virtual
******************************************************************************
Ejecutar: python -m venv venv
* Activar el entorno virtual
    + Windows  .\venv\Scripts\activate
    + MacOS / Linux   source ven/bin/activate 
* Desactivar el entorno virtual
    + deactivate

******************************************************************************
Instalación de librerías 
******************************************************************************
Ejecutar: 
    python -m pip install --upgrade pip 
    pip install django 
    pip install pillow


******************************************************************************
Descargar un template de bootstrap
******************************************************************************
https://startbootstrap.com/themes
https://startbootstrap.com/previews/modern-business

Revisar el HTML: 
    portfolio-overview.html
    - Verificar que es un sitio responsivo

******************************************************************************
Descargar algunas imágenes de ejemplo
******************************************************************************
https://www.dreamstime.com/



******************************************************************************
Django - Creación de prooyecto y ejecución
******************************************************************************
+ Crear el proyecto "webpersonal" 
    django-admin startproject webpersonal
    
    - Verificar los archivos que fueron creados 
+ Ejecutar el servidor
    python manage.py runserver     
    * Para detener el servidor => <CTRL> + C 

    - Verificar su funcionamiento en: 
    http://127.0.0.1:8000/

+ Crear la aplicación "project"
    cd webpersonal 
    python manage.py startapp project 

    - Verificar los archivos que fueron creados
 
+ Configurar el idioma y zona horaria
    - Editar el archivo settings.py
    LANGUAGE_CODE = 'es-mx'
    TIME_ZONE = 'America/Mexico_City'
    - Ejecutar el servidor
    - Verificar su funcionamiento en: 
    http://127.0.0.1:8000/    

******************************************************************************
Template de proyectos
******************************************************************************
+ Crear la estructura de directorios
    - Dentro de la carpeta project, crear las carpetas 
        * templates\project 
        * static\css 
        * static\assets
+ Copiar los siguientes archivos de la carpeta: bootstrapTemplate 
    - favicon.ico
    - style.css
    - portfolio-overview.html
+ Modificar el archivo portfolio-overview.html
    - Dentro del HEAD
    {% load static %}
    href="{% static 'assets/favicon.ico' %}"
    href="{% static 'css/styles.css' %}"

******************************************************************************
Crear la vista para poder visualizar el html
******************************************************************************
+ En el archivo views.py
    return render(request, 'project/portfolio-overview.html')

******************************************************************************
 settings.html
******************************************************************************
+ Agregar la aplicación en la sección INSTALLED_APPS
    'project',
+ Configurar la carpeta de imágenes
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


******************************************************************************
urls.py
******************************************************************************
    from project import views 
    path('project/', views.project_view),

+ Configurar el url para las imágenes
    from django.conf.urls.static import static
    from django.conf import settings
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

    Verificar su funcionamiento 

******************************************************************************
Crear los modelos ProjectType y Project
******************************************************************************
Nombre
Descripción
Tipo de proyecto
Imagen
Fecha de elaboración


from django.utils import timezone

class ProjectType(models.Model):
    project_type = models.CharField(max_length=100, verbose_name="Tipo de proyecto")
    
    def __str__(self):
        return self.project_type

class Project(models.Model):
    name = models.CharField(max_length=100, verbose_name="Nombre del proyecto")
    project_type = models.ForeignKey(ProjectType, on_delete=models.CASCADE)
    description = models.TextField(verbose_name="Descripción")
    image = models.ImageField(upload_to='project_images', verbose_name="Imágen")
    created = models.DateField(default=timezone.now, verbose_name="Fecha")

    def __str__(self):
        return self.name

******************************************************************************
CRUD para los modelos
******************************************************************************
+ Delegar la funcionalidad al administrador Django
from .models import Project, ProjectType

class ProjectTypeAdmin(admin.ModelAdmin):
    list_display = ('project_type', )

class ProjectAdmin(admin.ModelAdmin):
    list_display = ('name','project_type','created',)

admin.site.register(ProjectType, ProjectTypeAdmin)
admin.site.register(Project, ProjectAdmin)


******************************************************************************
Realizar la migración de la base de datos
******************************************************************************
python .\manage.py makemigrations
python .\manage.py migrate

+ Crear un super usuario 
python .\manage.py createsuperuser

+ Verificar su funcionamiento
 - Crear 2 proyectos al menos.. 

------ Opcional ------
class Meta:
    verbose_name = 'XXXXXX'
    verbose_name_plural = 'XXXXXX'

******************************************************************************
ListView
******************************************************************************
+ Cambiar la vista de proyectos 
    from django.views.generic import ListView

    class ProjectListView(ListView):
        model = Project
        template_name = 'project/portfolio-overview.html'

+ Realizar el cambio en el urls.py
    path('project/', ProjectListView.as_view()),    

******************************************************************************
Template  portfolio-overview.html
******************************************************************************
{% for project in object_list %}
    <div class="col-lg-6">
        <div class="position-relative mb-5">
            <img class="img-fluid rounded-3 mb-3" src="{{project.image.url}}" />
            <a class="h3 fw-bolder text-decoration-none link-dark stretched-link" href="#!">{{project.name}}</a>
        </div>
    </div>
{% endfor %}


